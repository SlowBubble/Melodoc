import { HandlerFunc, makePubSub, SubFunc } from "./tsModules/pub-sub/pubSub";

export class DebouncedKeyboard {
  onDebouncedKeyDown: SubFunc<KeyboardEvent>;
  onDebouncedKeyUp: SubFunc<KeyboardEvent>;
  enabled: boolean;
  protected debouncedKeyDown: HandlerFunc<KeyboardEvent>;
  protected debouncedKeyUp: HandlerFunc<KeyboardEvent>;
  // Using code because it represents the physical key
  // (as opposed to the character generated by pressing the key).
  protected keyDownCodes: Set<string>;
  constructor() {
    this.enabled = true;
    this.keyDownCodes = new Set();
    [this.debouncedKeyDown, this.onDebouncedKeyDown] = makePubSub<KeyboardEvent>();
    [this.debouncedKeyUp, this.onDebouncedKeyUp] = makePubSub<KeyboardEvent>();
  }
  keyDown(evt: KeyboardEvent) {
    if (this.keyDownCodes.has(evt.code)) {
      return;
    }
    this.keyDownCodes.add(evt.code);
    this.debouncedKeyDown(evt);
  }
  keyUp(evt: KeyboardEvent) {
    this.keyDownCodes.delete(evt.code);
    if (!this.enabled) {
      return;
    }
    this.debouncedKeyUp(evt);
  }
}